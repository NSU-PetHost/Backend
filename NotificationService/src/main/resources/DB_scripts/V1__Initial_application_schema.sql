create table if not exists  event_category (
    id int generated by default as identity,
    name varchar(50) unique not null,
    primary key (id)
);

comment on table event_category is 'Категория события';
comment on column event_category.id is 'Идентификатор';
comment on column event_category.name is 'Название события';

create table if not exists notification_template (
   id int8 generated by default as identity primary key,
   name text unique not null,
   subject_template text,
   body_template text not null,
   template_type notification_template_type not null,
   event_category_id int not null references event_category(id),
   default_channels JSONB null
);

comment on table notification_template is 'Шаблоны уведомлений';
comment on column notification_template.id is 'Идентификатор шаблона';
comment on column notification_template.name is 'Название шаблона';
comment on column notification_template.subject_template is 'Тема уведомления';
comment on column notification_template.body_template is 'Тело уведомления';
comment on column notification_template.template_type is 'Тип шаблона уведомления';
comment on column notification_template.event_category_id is 'Категория события для шаблона';
comment on column notification_template.default_channels is 'Каналы по умолчанию для шаблона';


create table if not exists  notification_schedule (
    id int8 generated by default as identity primary key,
    name text not null,
    notification_template_id int8 not null references notification_template(id),
    created_by_user_id int8,
    target_type notification_target_type not null,
    target_user_id int8,
    cron_expression varchar(100) not null,
    start_datetime timestamptz,
    end_datetime timestamptz,
    timezone varchar(100) not null,
    is_active boolean not null default true,
    target_channels JSONB null,
    created_at timestamptz not null default current_timestamp,
    updated_at timestamptz not null default current_timestamp
);

comment on table notification_schedule is 'Расписания уведомлений';
comment on column notification_schedule.id is 'Идентификатор расписания';
comment on column notification_schedule.name is 'Название расписания';
comment on column notification_schedule.notification_template_id is 'Шаблон уведомления для расписания';
comment on column notification_schedule.created_by_user_id is 'Идентификатор создателя расписания';
comment on column notification_schedule.target_type is 'Тип цели уведомления';
comment on column notification_schedule.target_user_id is 'Идентификатор целевого пользователя';
comment on column notification_schedule.cron_expression is 'Cron выражение для расписания';
comment on column notification_schedule.start_datetime is 'Дата и время начала действия расписания';
comment on column notification_schedule.end_datetime is 'Дата и время окончания действия расписания';
comment on column notification_schedule.timezone is 'Часовой пояс расписания';
comment on column notification_schedule.is_active is 'Статус активности расписания';
comment on column notification_schedule.target_channels is 'Целевые каналы уведомления';
comment on column notification_schedule.created_at is 'Дата и время создания записи';
comment on column notification_schedule.updated_at is 'Дата и время последнего обновления записи';

create table if not exists  notification (
    id int8 generated by default as identity primary key,
    person_id int8 not null,
    created_at timestamptz not null default current_timestamp,
    title text,
    message text not null,
    channel varchar(20) not null,
    notification_template_id int8 references notification_template(id),
    notification_schedule_id int8 references notification_schedule(id),
    is_read boolean not null default false
);

comment on table notification is 'Уведомления';
comment on column notification.id is 'Идентификатор уведомления';
comment on column notification.person_id is 'Идентификатор пользователя';
comment on column notification.created_at is 'Дата и время создания уведомления';
comment on column notification.title is 'Заголовок уведомления';
comment on column notification.message is 'Тело уведомления';
comment on column notification.channel is 'Канал отправки уведомления';
comment on column notification.notification_template_id is 'Ссылка на шаблон уведомления';
comment on column notification.notification_schedule_id is 'Ссылка на расписание уведомления';
comment on column notification.is_read is 'Статус прочтения уведомления';

create table if not exists person_setting (
    person_id int8 not null,
    category_id int not null references event_category(id),
    channels JSONB not null,
    primary key (person_id, category_id)
);

comment on table person_setting is 'Настройки пользователя';
comment on column person_setting.person_id is 'Идентификатор пользователя';
comment on column person_setting.category_id is 'Идентификатор категории события';
comment on column person_setting.channels is 'Каналы уведомлений для пользователя';

-- insert into person_setting (person_id, category_id, channels) values
--     (1, 1, '["email", "push"]'),
--     (1, 2, '["on_site"]'),
--     (2, 1, '["email"]'),
--     (2, 3, '["push", "on_site"]');
--
-- insert into notification (person_id, created_at, title, message, channel, notification_template_id, notification_schedule_id, is_read) values
--     (1, current_timestamp, 'Системное уведомление', 'Это системное уведомление.', 'email', NULL, NULL, false),
--     (2, current_timestamp, 'Новое сообщение', 'У вас новое сообщение.', 'push', NULL, NULL, false),
--     (1, current_timestamp, 'Напоминание', 'Не забудьте о встрече!', 'on_site', NULL, NULL, false);

