create table if not exists Persons (
    id int8 generated by default as identity primary key,
    firstName varchar(100) not null,
    surname varchar(100) not null,
    patronymic varchar(100),
    nickname varchar(100) not null unique,
    password text not null,
    email text not null unique,
    isEmailVerified bool not null,
    created_at timestamp not null,
    updated_at timestamp not null,
    created_who varchar(25) not null
);

create table if not exists authorities(
    id int8 generated by default as identity primary key,
    authority_name varchar(50) not null unique
);

create table if not exists persons_authorities(
    person_id int8 references persons(id),
    authority_id int references authorities(id),
    primary key (person_id, authority_id)
);


-- all users
insert into authorities (authority_name) values ('SEE POSTS');
insert into authorities (authority_name) values ('SEE COMMENTS TO THE POSTS');

-- authorize users
insert into authorities (authority_name) values ('SEE PERSONAL ACCOUNT');
insert into authorities (authority_name) values ('SEE PERSONAL STATS');
insert into authorities (authority_name) values ('GET PERSONALIZED RECOMMENDS');
insert into authorities (authority_name) values ('ADD PETS');
insert into authorities (authority_name) values ('CREATE NOTES FOR THE YOUR PET');
insert into authorities (authority_name) values ('COMMENT POSTS');
insert into authorities (authority_name) values ('WRITE POSTS');
insert into authorities (authority_name) values ('GET NOTIFICATIONS');
insert into authorities (authority_name) values ('ADD IN FAMILY');

-- типа умный чел
insert into authorities (authority_name) values ('VERIFY AUTHENTICITY POSTS');

-- moderator
insert into authorities (authority_name) values ('SEE LIST OF POSTS SUBMITTED FOR MODERATION');
insert into authorities (authority_name) values ('PUBLISH POSTS');
insert into authorities (authority_name) values ('REJECT PUBLISH POSTS');
insert into authorities (authority_name) values ('CHANGE AUTHORITY OTHER USERS');
insert into authorities (authority_name) values ('BAN USERS');